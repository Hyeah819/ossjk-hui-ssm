<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ossjk.ossjkssm.system.mapper.UserMapper">

	<!--结果集-->
	<resultMap id="BaseResultMap" type="com.ossjk.ossjkssm.system.entity.User">
<!--
		column 是对应数据库中表的字段名称 property是对应的bean里面的属性名称
-->
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="rid" property="rid" jdbcType="INTEGER" />
		<result column="ogid" property="ogid" jdbcType="INTEGER" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="pwd" property="pwd" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="DECIMAL" />
		<result column="birth" property="birth" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="logintime" property="logintime" jdbcType="VARCHAR" />
		<result column="loginip" property="loginip" jdbcType="VARCHAR" />
		<result column="crtm" property="crtm" jdbcType="TIMESTAMP" />
		<result column="mdtm" property="mdtm" jdbcType="TIMESTAMP" />

        <!--最简单的映射，在sql语句中使用as语句就好-->
        <result column="oname" property="oname" jdbcType="VARCHAR" />
        <result column="rname" property="rname" jdbcType="VARCHAR" />

<!--	这种映射要在用到的数据库数据没有多表同名的情况下才能够正常使用，同名了会分不清到底使用哪个。
		所以，设计数据库时，数据名尽量把前缀带上，这样可以避免很多的错误。
        <association property="organization" column="ogid" resultMap="com.ossjk.ossjkssm.system.mapper.OrganizationMapper.BaseResultMap"></association>
		<association property="role" column="rid" resultMap="com.ossjk.ossjkssm.system.mapper.RoleMapper.BaseResultMap"></association>-->
	</resultMap>
	<sql id="Base_Column_List">
		id, rid, ogid, username, pwd, sex, birth, phone, email, logintime, loginip, crtm, mdtm
	</sql>

	<!--根据id更新数据-->
    <update id="updateByPrimaryKey" parameterType="com.ossjk.ossjkssm.system.entity.User">
		update user
		set rid = #{rid,jdbcType=INTEGER},
		ogid = #{ogid,jdbcType=INTEGER},
		username = #{username,jdbcType=VARCHAR},
		pwd = #{pwd,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=DECIMAL},
		birth = #{birth,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		logintime = #{logintime,jdbcType=VARCHAR},
		loginip = #{loginip,jdbcType=VARCHAR},
		crtm = #{crtm,jdbcType=TIMESTAMP},
		mdtm = NOW()
		where id = #{id,jdbcType=INTEGER}
	</update>


    <!--登录-->
    <select id="selectByName" resultType="com.ossjk.ossjkssm.system.entity.User">
		select * from user u where username = #{username}
	</select>

	<!--登录时间-->
	<update id="logintime">
		update user u  set logintime=now() where username = #{username}
	</update>
    <!--带条件的查询全部数据-->
    <select id="selectAll"  resultMap="BaseResultMap">
		select u.*,organizationName,roleName  from user u,organization o,role r
        <trim prefix="where" prefixOverrides="and|or">
            u.ogid = o.id and u.rid = r.id
            <if test="username!=null and username!=''">
                AND username LIKE CONCAT('%',#{username},'%')
            </if>
        </trim>
	</select>

    <!-- 批量删除 -->
    <delete id="batchDelete">
        delete from user where id in
        <foreach collection="array" item="id" index="no" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{id,jdbcType=INTEGER}
	</select>


	<!--根据id删除-->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where id = #{id,jdbcType=INTEGER}
	</delete>


	<!--插入-->
	<insert id="insert" parameterType="com.ossjk.ossjkssm.system.entity.User">
		insert into user (id, rid, ogid,
		username, pwd, sex, birth,
		phone, email, logintime,
		loginip, crtm, mdtm
		)
		values (#{id,jdbcType=INTEGER}, #{rid,jdbcType=INTEGER}, #{ogid,jdbcType=INTEGER},
		#{username,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, #{sex,jdbcType=DECIMAL}, #{birth,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{logintime,jdbcType=VARCHAR},
		#{loginip,jdbcType=VARCHAR},now(), #{mdtm,jdbcType=TIMESTAMP}
		)
	</insert>
<!--	<insert id="insertSelective" parameterType="com.ossjk.ossjkssm.system.entity.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="rid != null">
				rid,
			</if>
			<if test="ogid != null">
				ogid,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="pwd != null">
				pwd,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="birth != null">
				birth,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="logintime != null">
				logintime,
			</if>
			<if test="loginip != null">
				loginip,
			</if>
			<if test="crtm != null">
				crtm,
			</if>
			<if test="mdtm != null">
				mdtm,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="rid != null">
				#{rid,jdbcType=INTEGER},
			</if>
			<if test="ogid != null">
				#{ogid,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="pwd != null">
				#{pwd,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=DECIMAL},
			</if>
			<if test="birth != null">
				#{birth,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="logintime != null">
				#{logintime,jdbcType=VARCHAR},
			</if>
			<if test="loginip != null">
				#{loginip,jdbcType=VARCHAR},
			</if>
			<if test="crtm != null">
				#{crtm,jdbcType=TIMESTAMP},
			</if>
			<if test="mdtm != null">
				#{mdtm,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>-->
<!--	<update id="updateByPrimaryKeySelective" parameterType="com.ossjk.ossjkssm.system.entity.User">
		update user
		<set>
			<if test="rid != null">
				rid = #{rid,jdbcType=INTEGER},
			</if>
			<if test="ogid != null">
				ogid = #{ogid,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="pwd != null">
				pwd = #{pwd,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=DECIMAL},
			</if>
			<if test="birth != null">
				birth = #{birth,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="logintime != null">
				logintime = #{logintime,jdbcType=VARCHAR},
			</if>
			<if test="loginip != null">
				loginip = #{loginip,jdbcType=VARCHAR},
			</if>
			<if test="crtm != null">
				crtm = #{crtm,jdbcType=TIMESTAMP},
			</if>
			<if test="mdtm != null">
				mdtm = #{mdtm,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>-->

</mapper>